-- return {
-- 	"yetone/avante.nvim",
-- 	event = "VeryLazy",
-- 	lazy = false,
-- 	version = false, -- set this if you want to always pull the latest change
-- 	-- if you want to build from source then do `make BUILD_FROM_SOURCE=true`
-- 	build = "make",
-- 	config = {
-- 		provider = "ollama",
-- 		vendors = {
-- 			---@type AvanteProvider
-- 			ollama = {
-- 				["local"] = true,
-- 				endpoint = "127.0.0.1:11434/api",
-- 				model = "llama3.2",
-- 				parse_curl_args = function(opts, code_opts)
-- 					print("Avante Debug")
-- 					print("Endpoint", opts.endpoint .. "/chat")
-- 					print("Model", opts.model)
-- 					print("Message", require("avante.providers").copilot.parse_message(code_opts))
--
-- 					return {
-- 						url = opts.endpoint .. "/chat",
-- 						headers = {
-- 							["Accept"] = "application/json",
-- 							["Content-Type"] = "application/json",
-- 						},
-- 						body = {
-- 							model = opts.model,
-- 							messages = require("avante.providers").copilot.parse_message(code_opts), -- you can make your own message, but this is very advanced
-- 							max_tokens = 2048,
-- 							stream = true,
-- 						},
-- 					}
-- 				end,
-- 				parse_response_data = function(data_stream, event_state, opts)
-- 					require("avante.providers").openai.parse_response(data_stream, event_state, opts)
-- 				end,
-- 			},
-- 		},
--
-- 		behaviour = {
-- 			auto_suggestions = false, -- Experimental stage
-- 			auto_set_highlight_group = true,
-- 			auto_set_keymaps = false,
-- 			auto_apply_diff_after_generation = false,
-- 			support_paste_from_clipboard = false,
-- 		},
-- 	},
-- 	-- build = "powershell -ExecutionPolicy Bypass -File Build.ps1 -BuildFromSource false" -- for windows
-- 	dependencies = {
-- 		"nvim-treesitter/nvim-treesitter",
-- 		"nvim-lua/plenary.nvim",
-- 		"MunifTanjim/nui.nvim",
-- 		--- The below dependencies are optional,
-- 		"nvim-tree/nvim-web-devicons", -- or echasnovski/mini.icons
-- 		{
-- 			-- Make sure to set this up properly if you have lazy=true
-- 			"MeanderingProgrammer/render-markdown.nvim",
-- 			opts = {
-- 				file_types = { "markdown", "Avante" },
-- 			},
-- 			ft = { "markdown", "Avante" },
-- 		},
-- 	},
-- }
return {}
